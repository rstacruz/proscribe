!!!
%html
  %head
    %title= page.title

    %meta(charset='UTF-8')
    -# Use the latest IE engine, or Chrome frame.
    %meta(http-equiv='X-UA-Compatible' content='IE=edge,chrome=1')

    -# Mobile viewport optimization. j.mp/bplateviewport
    %meta(name='viewport' content='width=device-width, initial-scale=1.0')

    -# Standard SEO meta
    - if page.meta.keywords
      %meta{:name => 'keywords', :content => page.meta.keywords}
    - if page.meta.description
      %meta{:name => 'description', :content => page.meta.description}

    %link{:rel => 'stylesheet', :href => rel('/style.css')+"?#{File.mtime(Proton::Page['/style.css'].file).to_i}"}

    %script{src: 'http://cachedcommons.org/cache/prettify/1.0.0/javascripts/prettify-min.js', type: 'text/javascript'}
    %script{src: 'http://cdnjs.cloudflare.com/ajax/libs/jquery/1.6.2/jquery.min.js', type: 'text/javascript'}
    %script{src: rel('/proscribe.js')+"?#{File.mtime(Proton::Page['/proscribe.js'].file).to_i}", type: 'text/javascript'}
  %body
    #top
      %a#logo{href: rel('/')}
        = Hyde::Page['/'].title

    #area
      #content
        %div.c
          #crumbs
            - page.breadcrumbs[0..-2].each do |p|
              %a{href: rel(p.path)}= p
              %span.gt!= "&rarr;"

            %strong= page

          %hgroup
            - if page.meta.layout
              %p.type= page.meta.layout.capitalize
            %h1= page.title
            - if page.meta.brief
              %h5= page.meta.brief

          .content
            != yield

            - groups = page_children(page)
            - groups.each do |type, children|
              %h3= type.to_s.gsub('_', ' ').capitalize

              %ul.section
                - children.each do |method|
                  %li
                    %a{href: rel(method.path)}= method.title
                    - unless method.meta.brief.to_s.empty?
                      %span.brief= method.meta.brief

            -# Source
            %section.footer
              .left
                %strong
                  - page.breadcrumbs[1...-1].each do |pp|
                    %a{href: rel(page.path)}
                      = pp.title
                      -# if pp.meta.page_type
                      -#  %span.type= pp.meta.page_type

                    %span.arrow!= "&rsaquo;"

                  = page.title
                  - if page.meta.page_type
                    %span.type= page.meta.page_type

                - if github_source_link
                  Defined in
                  %a{href: github_source_link}
                    %span= page.source_file
                    %span.view-source!= "View source &rsaquo;"

        %nav#nav
          - parent   = (page.children.any? ? page : (page.parent || page))
          - children = parent.children.select { |p| p.html? }
          - groups   = children.group_by { |p| p.meta.page_type }

          - if parent && !parent.root?
            %nav.parents
              %ul
                - parent.breadcrumbs.each do |pp|
                  %li
                    %a{href: rel(pp.path), class: ('active' if pp.path == page.path)}
                      - unless pp.path == page.path
                        %span.back!= "&lsaquo;"

                      %em= pp.meta.page_type
                      = pp

          - if groups.any?
            - groups.each do |name, pages|
              - name = name ? Inflector[name].pluralize.capitalize : parent.to_s
              %nav
                - if name
                  %h4= name
                %ul
                  - pages.each do |pp|
                    %li
                      - classes = []
                      - classes << 'active'  if pp.path == page.path
                      - classes << 'more'    if pp.children.any?

                      %a{href: rel(pp.path), class: classes.join(' ')}
                        = pp

